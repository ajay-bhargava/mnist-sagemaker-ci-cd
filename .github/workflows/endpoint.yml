name: Deploy Sagemaker Endpoint
on:
  pull_request:
    branches:
      - deployed-mnist-branch-for-serverless
    types: [assigned]
  workflow_dispatch:

jobs:
  check_endpoint:
    name: Check if Endpoint Exists.
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Use GitHub OIDC provider
          role-to-assume: "arn:aws:iam::220582896887:role/GithubActionsAWSRole"
          aws-region: us-east-1

      - name: Run AWS CLI
        id: aws-cli
        env:
          EVENT_SHA: "bdc5ae6dd849743656c270e938e4fc56fd0e1863"
        run: |
          ENDPOINT_DESCRIPTION=$(aws sagemaker describe-endpoint --endpoint-name "${EVENT_SHA:0:7}" 2>/dev/null)
          if [[ -n $ENDPOINT_DESCRIPTION && $ENDPOINT_DESCRIPTION == *"\"EndpointStatus\": \"InService\""* ]]; then
            echo "IS_DEPLOYED=true" >> "$GITHUB_OUTPUT"
            echo "##Endpoint Check: :rocket:" >> "$GITHUB_STEP_SUMMARY
            echo "| Endpoint | Status | " >> "$GITHUB_STEP_SUMMARY"
            echo "| -------- | ------ | " >> "$GITHUB_STEP_SUMMARY"
            echo "| ${EVENT_SHA:0:7} | Already in Service | " >> "$GITHUB_STEP_SUMMARY"
          else
            echo "IS_DEPLOYED=false" >> "$GITHUB_OUTPUT"
            echo "##Endpoint Check: :rocket: " >> "$GITHUB_STEP_SUMMARY
            echo "| Endpoint | Status | " >> "$GITHUB_STEP_SUMMARY"
            echo "| -------- | ------ | " >> "$GITHUB_STEP_SUMMARY"
            echo "| ${EVENT_SHA:0:7} | Not Deployed | " >> "$GITHUB_STEP_SUMMARY"
          fi
    outputs:
      IS_DEPLOYED: ${{steps.aws-cli.outputs.IS_DEPLOYED}}

  deploy_endpoint:
    name: Deploy Sagemaker Endpoint.
    needs:
      - check_endpoint
    if: |
      github.event.assignee.login == 'ajay-bhargava' &&
      needs.check_endpoint.outputs.IS_DEPLOYED == 'false'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      #----------------------------------------------
      #       set environment variables and apps
      #----------------------------------------------
      - name: Establish Github App Bot
        id: github-app-token
        uses: mercari/github-app-token-generator@v1
        with:
          app-id: ${{secrets.GH_APP_ID}}
          app-private-key: ${{secrets.GH_APP_PEM}}
          app-installation-id: ${{secrets.GH_APP_INSTALLATION_ID}}

      #----------------------------------------------
      #       check-out repo and login to AWS
      #----------------------------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Use GitHub OIDC provider
          role-to-assume: ${{secrets.AWS_ASSUME_ROLE_ARN}}
          aws-region: us-east-1
      #----------------------------------------------
      #       Setup Poetry and Install Dependencies
      #----------------------------------------------
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          installer-parallel: true
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Poetry Project
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install --no-interaction --only runtime
      #----------------------------------------------
      #       Setup CML Runner
      #----------------------------------------------
      - name: Setup CML Runner
        uses: iterative/setup-cml@v2
      #----------------------------------------------
      #       Run Sagemaker model deployment
      #----------------------------------------------
      - name: Deploy Sagemaker Endpoint
        env:
          SAGEMAKER_IAM_ROLE: ${{secrets.SAGEMAKER_IAM_ROLE}}
          REPO_TOKEN: ${{ steps.github-app-token.outputs.token }}
          EVENT_SHA: "bdc5ae6dd849743656c270e938e4fc56fd0e1863"
        id: deploy
        run: |
          poetry run python3 ./src/mnist_sagemaker_ci_cd/deploy.py
          cat details.txt >> report.md
          cml comment create report.md
      #----------------------------------------------
      #       Future State: Run A/B Test
      #       Code on Endpoint(Could be part of
      #       the same deploy.py script)
      #----------------------------------------------
