name: Deploy Sagemaker Endpoint
on:
  pull_request:
    branches:
      - master
    types: [assigned]
  workflow_dispatch:

jobs:
  #----------------------------------------------------------------
  #   Check if there are files changed between PR commits
  #----------------------------------------------------------------
  check_files_changed:
    name: Diff PR commit.
    if: github.event.pull_request.commits > 1
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      #----------------------------------------------
      #       set environment variables and apps
      #----------------------------------------------
      - name: Establish Github App Bot
        id: github-app-token
        uses: mercari/github-app-token-generator@v1
        with:
          app-id: ${{secrets.GH_APP_ID}}
          app-private-key: ${{secrets.GH_APP_PEM}}
          app-installation-id: ${{secrets.GH_APP_INSTALLATION_ID}}

      - name: Set Environment Variables
        id: vars
        run: |
          echo "REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $2}')" >> "$GITHUB_OUTPUT"
          echo "This is run attempt ${{ github.run_attempt }}"
      #----------------------------------------------
      #          check-out repo latest commit
      #----------------------------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      #----------------------------------------------
      #         setup changed-files@v42 action
      #----------------------------------------------
      - name: Check if files changed
        id: changed_files
        uses: tj-actions/changed-files@v42
        with:
          files_yaml: |
            deploy: 
              - src/mnist_sagemaker_ci_cd/deploy.py
              - src/mnist_sagemaker_ci_cd/lib/inference.py

      - name: Set output
        if: ${{steps.changed_files.outputs.deploy_any_changed == 'true'}}
        run: echo "There were files changed..."
    outputs:
      files_changed: ${{steps.changed_files.outputs.deploy_any_changed}}

  deploy_endpoint:
    name: Deploy Sagemaker Endpoint.
    needs:
      - check_files_changed
    if: |
      (needs.check_files_changed.outputs.files_changed == 'true' || needs.check_files_changed.result == 'skipped') &&
      github.event.assignee.login == 'ajay-bhargava'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      #----------------------------------------------
      #       set environment variables and apps
      #----------------------------------------------
      - name: Establish Github App Bot
        id: github-app-token
        uses: mercari/github-app-token-generator@v1
        with:
          app-id: ${{secrets.GH_APP_ID}}
          app-private-key: ${{secrets.GH_APP_PEM}}
          app-installation-id: ${{secrets.GH_APP_INSTALLATION_ID}}

      - name: Set Environment Variables
        id: vars
        run: |
          echo "REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F/ '{print $2}')" >> "$GITHUB_OUTPUT"
      #----------------------------------------------
      #       check-out repo and login to AWS
      #----------------------------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Base SHA
        id: master_base_sha
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Use GitHub OIDC provider
          role-to-assume: ${{secrets.AWS_ASSUME_ROLE_ARN}}
          aws-region: us-east-1
      #----------------------------------------------
      #       Setup Poetry and Install Dependencies
      #----------------------------------------------
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          installer-parallel: true
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Poetry Project
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install --no-interaction --only runtime
      #----------------------------------------------
      #       Setup CML Runner
      #----------------------------------------------
      - name: Setup CML Runner
        uses: iterative/setup-cml@v2
      #----------------------------------------------
      #       Run Sagemaker model deployment
      #----------------------------------------------
      - name: Deploy Sagemaker Endpoint
        env:
          SAGEMAKER_IAM_ROLE: ${{secrets.SAGEMAKER_IAM_ROLE}}
          REPO_TOKEN: ${{ steps.github-app-token.outputs.token }}
          EVENT_SHA: ${{steps.master_base_sha.outputs.base}}
        id: deploy
        run: |
          poetry run python3 ./src/mnist_sagemaker_ci_cd/deploy.py
          cat details.txt >> report.md
          cml comment create report.md
          echo "Event SHA: ${EVENT_SHA:0:7}" >> $GITHUB_STEP_SUMMARY
      #----------------------------------------------
      #       Future State: Run A/B Test
      #       Code on Endpoint(Could be part of
      #       the same deploy.py script)
      #----------------------------------------------
